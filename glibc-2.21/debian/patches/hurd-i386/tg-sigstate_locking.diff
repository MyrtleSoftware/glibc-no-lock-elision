From: Richard Braun <rbraun@sceen.net>
Subject: [PATCH] Hurd: fix sigstate locking

It looks like _hurd_thread_sigstate used to return with the sigstate
lock held long ago, but since that's no longer the case, don't unlock
something that isn't locked.

Note that it's unlikely this change fixes anything in practice since
its current implementation (on i386) makes this call a nop.

* hurd/hurd/signal.h (_hurd_critical_section_lock): Don't unlock
sigstate.

---
 hurd/hurd/signal.h | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

--- a/hurd/hurd/signal.h
+++ b/hurd/hurd/signal.h
@@ -204,9 +204,8 @@ _hurd_critical_section_lock (void)
       /* The thread variable is unset; this must be the first time we've
 	 asked for it.  In this case, the critical section flag cannot
 	 possible already be set.  Look up our sigstate structure the slow
-	 way; this locks the sigstate lock.  */
+	 way.  */
       ss = THREAD_SELF->_hurd_sigstate = _hurd_thread_sigstate (__mach_thread_self ());
-      __spin_unlock (&ss->lock);
     }
 
   if (! __spin_try_lock (&ss->critical_section_lock))
